{"version":3,"file":"src_app_services_python-compiler-service_python-compiler_worker_ts.js","mappings":"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","sources":["./src/app/services/compiler-service/compiler-service.types.ts","./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack/bootstrap","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","./src/app/services/python-compiler-service/python-compiler.worker.ts"],"sourcesContent":["\nexport type UID = string; // should I ? \n\nexport type PromiseResolver<T> = (value: T | PromiseLike<T>) => void;\n\nexport type stdCallback = (data:string)=>void;\nexport type stateCallback = (state:CompilerState, content?:string)=>void;\nexport type notifyCallback = (title:string, msg:string, kind:string)=>void;\n\nexport type CompilerMessageHandler = (message:CompilerRequest)=>CompilerResponse;\n\nexport interface CompilerDriver{\n  installPackages(packages: string[]): Promise<string>;\n  executeCode(code: string): Promise<string>;\n  executeFile(fullpath: string): Promise<string>;\n  stopExecution(signal?: number): Promise<boolean>;\n  subscribeNotify(enable?:boolean, onNotify?:(title:string, msg:string, kind:string)=>void ): Promise<boolean>;\n  subscribeState(enable?:boolean, onState?:(state:CompilerState, content?:string)=>void ): Promise<boolean>;\n  subscribeStdout(enable?:boolean, onStdout?:(data:string)=>void): Promise<boolean>;\n  subscribeStderr(enable?:boolean, onStderr?:(data:string)=>void): Promise<boolean>;\n  sendStdin(msg:string): Promise<boolean> ;\n}\n\nexport enum CompilerState {\n  Unknown = 'Unknown',\n  Loading = 'Loading',\n  Ready = 'Ready',\n  Run = 'Run',\n  Stdin = 'Stdin',\n  Success = 'Success',\n  Killed = 'Killed',\n  Error = 'Error',\n}\n\n\n\n\nexport enum CompilerMessageType {\n  Ready = 'Ready',\n  Mount = 'Mount',\n  Unmount = 'Unmount',\n  InstallPackages = 'InstallPackages',\n  ExecuteFile = 'ExecuteFile',\n  ExecuteCode = 'ExecuteCode',\n  StopExecution = 'StopExecution',\n  SubscribeNotify = 'SubscribeNotify',\n  SubscribeState = 'SubscribeState',\n  SubscribeStdout = 'SubscribeStdout',\n  SubscribeStderr = 'SubscribeStderr',\n  SendStdin = 'SendStdin',\n  CreateDirectory = 'CreateDirectory',\n  WriteFile = 'WriteFile',\n  ReadFile = 'ReadFile',\n  ReadDirectory = 'ReadDirectory',\n  ScanDirectory = 'ScanDirectory',\n  Delete = 'Delete',\n  Exists = 'Exists',\n  RenameItem = \"RenameItem\"\n}\n\n\nexport interface CompilerMessage {\n  uid: UID;\n  type: CompilerMessageType;\n  args: string[];\n  contents: Array<string|ArrayBuffer>;\n}\n\nexport interface CompilerRequest {\n  uid: UID;\n  timestamp: number;\n  message: CompilerMessage;\n}\n\nexport interface CompilerResponse {\n  uid: UID;\n  timestamp: number;\n  success: boolean;\n  message: CompilerMessage;\n  errors: string[];\n}\n\nexport interface CompilerRequestHandler {\n  uid: UID;\n  request: CompilerRequest;\n  resolvePromise: PromiseResolver<any>\n}\n\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/// <reference lib=\"webworker\" />\n// Configs\n\nimport { CompilerMessageHandler, CompilerMessageType, CompilerRequest, CompilerResponse, CompilerState, PromiseResolver } from \"../compiler-service/compiler-service.types\";\n\nimport { FsNodeFolder } from \"../fs-service/fs.service.types\";\n\n\nlet pyodideRoot = \"/\"\nlet pyodideMount = \"/TALight\"\n\n// Bootstrap pyodide\n\nimportScripts(\"../../../assets/pyodide/pyodide.js\");\ndeclare var loadPyodide: any;\n\n//let worker: PyodideFsWorker;\nasync function main() {\n  let worker = new PyodideWorker(pyodideRoot, pyodideMount);\n}\n\nclass PyodideWorker{\n  \n  requestQueueNotify = new Map<string,CompilerRequest>();\n  requestQueueState = new Map<string,CompilerRequest>();\n  requestQueueStdout = new Map<string,CompilerRequest>();\n  requestQueueStderr = new Map<string,CompilerRequest>();\n\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  pyodide: any;\n  fs: any;\n  loadPyodide: any;\n  micropip: any;\n  root:string;\n  mount:string;\n  isReady = false;\n  readyPromise: Promise<boolean>;\n  readyResolver: PromiseResolver<boolean>;\n  stdinPending=false;\n  stdinResolver?: PromiseResolver<string>;\n  isSync = false;\n  needSync = false;\n  stdinBuffer = new Array<string>();\n  lastState = CompilerState.Unknown\n  lastResult?:any\n  interruptBuffer = new Uint8Array(1);\n  interruptTimer:any\n  \n  constructor(root:string, mount:string ){\n    this.root = root;\n    this.mount = mount;\n\n    this.requestQueueStdout = new Map();\n    this.requestQueueStderr = new Map();\n    \n    //onReady\n    let readyResolver: PromiseResolver<boolean>;\n    this.readyPromise =  new Promise<boolean>((resolve, reject) => {\n      readyResolver = resolve;\n    })\n    this.readyResolver = (value)=>{ readyResolver(value) }\n\n    \n    addEventListener(\"message\", async ( payload:any ) => { this.onData(payload.data) })\n    \n    //Send Init event, but outside the constructor\n    setTimeout(()=>{this.sendState(CompilerState.Loading)})\n\n  \n    this.initPydiode().then(()=>{\n      this.load(this.root, this.mount);\n      this.fs.syncfs(true,()=>{\n        \n        this.interruptBuffer[0]=0\n        this.pyodide.setInterruptBuffer(this.interruptBuffer)\n        this.isReady = true;\n        this.sendState(CompilerState.Ready)\n        this.readyResolver(this.isReady);\n        \n      });\n    }).catch( (error:any)=>{\n      this.sendState(CompilerState.Error, error)\n    });\n\n\n  }\n\n  async initPydiode(){\n    \n    console.log(\"loadPyodide: ...\")\n    \n    let options = {\n      stdin: ()=>{return this.onStdin()},\n      stdout: (msg:string)=>{this.sendStdout(msg)},\n      stderr: (msg:string)=>{this.sendStderr(msg)},\n    }\n\n    //console.log(loadPyodide)\n    \n    this.pyodide = await loadPyodide(options);\n    this.fs = this.pyodide.FS;\n    await this.pyodide.loadPackage([\"micropip\"]);\n    this.micropip = this.pyodide.pyimport(\"micropip\");\n    \n    console.log(\"loadPyodide: done\")\n    //console.log(pyodide)\n\n    this.setCustomHooks()\n  }\n\n  async setCustomHooks(){\n    let oldInput = this.pyodide.globals.input;\n    console.log(\"setCustomHooks:oldInput:\",oldInput)\n\n\n    //Globals: Input\n    let localThis = this;\n    this.pyodide.globals.set('input', async function (prompt?:string) {\n      if (prompt && prompt.trim().length>0){localThis.sendStdout(prompt)}\n\n      localThis.sendState(CompilerState.Stdin)\n      console.log(\"setCustomHooks:scrivo sulla consolle!!!!\")\n      let stdinResolver: PromiseResolver<string>;      \n      let promise =  new Promise<string>((resolve, reject) => {\n        stdinResolver = resolve;\n      })\n      localThis.stdinResolver = (message)=>{ stdinResolver(message) }\n\n      if(localThis.stdinBuffer.length>0){\n        let line = localThis.stdinBuffer.shift()\n        localThis.stdinResolver(line!)\n      }\n\n      return promise;\n    });\n\n    /*\n    let signal = this.pyodide.pyimport(\"signal\");\n    signal.signal(signal.SIGINT, (signal:any, frame:any)=>{  \n      console.log('setCustomHooks:signal:signal:', signal);\n      console.log('setCustomHooks:signal:frame:', frame);\n    })\n    */\n\n\n\n\n  }\n\n  async load(root:string, mount:string)\n  {\n    this.root = root;\n    this.mount = mount;\n    console.log(\"PyodideFsWorker: load\")\n    this.fs.mkdir(this.mount);\n    this.fs.mount(this.fs.filesystems.IDBFS, { root: root }, this.mount);\n    console.log(\"PyodideFsWorker: load: done\")\n\n    \n    console.log(this.fs.mounts)\n    console.log(this.fs.root)\n    console.log(this.fs.root.mount)\n  }\n\n  toString(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return this.binDecoder.decode(data) }\n    return data\n  }\n\n  toArrayBuffer(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return data }\n    return this.binEncoder.encode(data)\n  }\n  \n  \n  responseFromRequest(request:CompilerRequest, success:boolean=true, errors:string[]=[]):CompilerResponse{\n    let response:CompilerResponse = {\n      uid: request.uid,\n      timestamp: Date.now(),\n      success: success,\n      errors: errors,\n      message: {\n        uid: request.message.uid,\n        type: request.message.type,\n        args:[],\n        contents:[]\n      }\n    };\n    return response\n  }\n\n  responseError(response:CompilerResponse, error?:string):CompilerResponse{\n    response.success = false;\n    if (error){response.errors.push(error)};\n    return response;\n  }\n\n  syncFS(){\n    if (!this.isSync){\n      this.isSync = true\n      this.needSync = false;\n      console.log('syncFS: do!');\n      this.fs.syncfs((err?:any)=>{\n        if(err){\n          console.log('syncFS: error while syncing, retrying')\n          this.needSync = true;\n        }else{\n          console.log('syncFS: success!');\n        }\n        this.isSync = false;\n        if (this.needSync){\n          this.needSync = false;\n          console.log('syncFS: repeat!');\n          this.syncFS()\n        }\n      })\n    }\n    else{\n      console.log('syncFS: queued');\n      this.needSync = true;\n    }\n  }\n\n  onStdin(){\n    //TOD: unused??\n    // localThis.sendState(CompilerState.Stdin)\n    console.log('PyodideWorker:onStdin:');   \n    //if (this.stdinBuffer.length > 0){}    -> What does this do?\n    //let item = this.stdinBuffer.shift()\n    let item = this.stdinBuffer[0];\n    console.log('PyodideWorker:onStdin:', item);\n    return item\n  }\n\n  execCodeAsync(code:string){\n    console.log(\"execCode:\",code)\n    this.interruptBuffer[0]=0\n    this.pyodide.setInterruptBuffer(this.interruptBuffer)\n    this.interruptTimer = setInterval(()=>{\n      try{ this.pyodide.checkInterrupt() }\n      catch( e ){ \n        this.sendStderr(\"Process terminated by user request.\")\n        this.sendState(CompilerState.Killed)\n        throw e;\n      }\n    },10)\n\n\n    /*\n    async pyodide.loadPackagesFromImports(code, options)\n        code (string) – The code to inspect.\n\n        options.checkIntegrity (boolean) – If true, check the integrity of the downloaded packages (default: true)\n\n        options.errorCallback ((message: string) => void) – A callback, called with error/warning messages (optional)\n\n        options.messageCallback ((message: string) => void) – A callback, called with progress messages (optional)\n    */\n    let options = {\n      checkIntegrity: true, //default: true\n      errorCallback: (msg:string)=>{this.sendStderr(msg)},\n      messageCallback: (msg:string)=>{this.sendStdout(msg)},\n    }\n    this.stdinBuffer = []\n    this.pyodide.loadPackagesFromImports(code,options)\n\n\n    \n\n\n\n    this.pyodide.runPythonAsync(code).then( (result:any)=>{\n      console.log(\"execCode: result:\\n\",result)\n      this.sendState(CompilerState.Success, result)\n    }).catch( (error:any)=>{\n      this.handleExecError(error)\n    }).finally(()=>{\n      clearInterval(this.interruptTimer)\n    })\n  }\n\n  \n  handleExecError(error:any){\n    let sys = this.pyodide.pyimport(\"sys\");\n    let errorType = error.type;\n    if (errorType == \"SystemExit\"){\n      let exitCode = sys.last_value.code.toString();\n      if(exitCode == \"0\"){\n        this.sendState(CompilerState.Success)\n      }else{\n        this.sendState(CompilerState.Error, \"Execution terminated with exit code: \" + exitCode)\n      }\n      return;\n    }\n    this.sendState(CompilerState.Error, error.message)\n    //throw error\n    /*\n    let props = Object.getOwnPropertyNames(sys.last_value)\n    let propArgs = Object.getOwnPropertyNames(sys.last_value.args)\n    let propTB = Object.getOwnPropertyNames(sys.last_value.__traceback__)\n\n    let exceptionType = sys.last_type.toJs();\n    let errorValue = sys.last_value.toJs();\n    let errorTraceback = sys.last_traceback.toJs();\n    console.log(\"execCode: error.type:\", errorType)\n    console.log(\"execCode: error.type:\", errorType)\n    console.log(\"execCode: sys.last_type:\", exceptionType)\n    console.log(\"execCode: sys.last_value:\", errorValue)\n    console.log(\"execCode: sys.last_traceback:\", errorTraceback)\n\n    console.log(\"execCode: error.message:\", error.message )\n    */\n    //console.log(\"execCode: sys:\\n\", sys)\n    \n    //throw error;\n  }\n\n\n\n  sendNotify(title: string, msg:string, kind:string=\"\"){\n    console.log(\"sendNotify: \",msg)\n    this.requestQueueNotify.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [title, msg, kind]\n      console.log(\"sendNotify:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  sendState(state?: CompilerState, content?:any){\n    if(!state){ state = this.lastState } //Resend the same state, used onSubscribe\n    else { this.lastState = state }\n    \n    console.log(\"PyodideWorker:sendState: \",state)\n    this.requestQueueState.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [state ?? CompilerState.Unknown]\n      if(content){\n        response.message.contents.push(content)\n      }\n      console.log(\"sendState:uid:\\n\",response)\n      postMessage(response)\n    })\n  }\n\n  sendStdout(msg:string){\n    console.log(\"sendStdout: \"+msg)\n    this.requestQueueStdout.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [msg]\n      console.log(\"sendStdout:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  sendStderr(msg:string){\n    console.log(\"sendStderr: \"+msg)\n    this.requestQueueStderr.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [msg]\n      console.log(\"sendStderr:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  onData(request:CompilerRequest) {\n    console.log('PyodideFsWorker:onData:',request);\n    let action: CompilerMessageHandler | null = null;\n\n    switch (request.message.type) {\n      case CompilerMessageType.Ready:\n        this.ready(request);\n        break;\n      case CompilerMessageType.SubscribeNotify:\n        action=(request)=>{return this.subscribeNotify(request)};\n        break;\n      case CompilerMessageType.SubscribeState:\n        action=(request)=>{return this.subscribeState(request)};\n        break;\n      case CompilerMessageType.SubscribeStdout:\n        action=(request)=>{return this.subscribeStdout(request)};\n        break;\n      case CompilerMessageType.SubscribeStderr:\n        action=(request)=>{return this.subscribeStderr(request)};\n        break;\n      case CompilerMessageType.SendStdin:\n        action=(request)=>{return this.sendStdin(request)};\n        break;\n      case CompilerMessageType.InstallPackages:\n        action=(request)=>{return this.installPackages(request)};\n        break;\n      case CompilerMessageType.ExecuteCode:\n        action=(request)=>{return this.executeCode(request)};\n        break;\n      case CompilerMessageType.ExecuteFile:\n        action=(request)=>{return this.executeFile(request)};\n        break;\n      case CompilerMessageType.StopExecution:\n        action=(request)=>{return this.stopExecution(request)};\n        break;\n      case CompilerMessageType.CreateDirectory:\n        action=(request)=>{return this.createDirectory(request)};\n        break;\n      case CompilerMessageType.ReadDirectory:\n        action=(request)=>{return this.readDirectory(request)};\n        break;\n      case CompilerMessageType.WriteFile:\n        action=(request)=>{return this.writeFile(request)};\n        break;\n      case CompilerMessageType.ReadFile:\n        action=(request)=>{return this.readFile(request)};\n        break;\n      case CompilerMessageType.ScanDirectory:\n        action=(request)=>{return this.scanDirectory(request)};\n        break;\n      case CompilerMessageType.RenameItem:\n        action=(request)=>{return this.renameItem(request)};\n        break;\n      case CompilerMessageType.Delete:\n        action=(request)=>{return this.delete(request)};\n        break;\n      case CompilerMessageType.Exists:\n        action=(request)=>{return this.exists(request)};\n        break;\n      default: break;\n    }\n    if(action){ \n      let response = action(request);\n      if (response){ postMessage(response) }\n    }\n  }\n\n  ready(request:CompilerRequest){\n    let response = this.responseFromRequest(request);\n    response.message.args = ['true'];\n    if (this.isReady) {\n      postMessage(response);\n    }else{\n      this.readyPromise.then((ready)=>{\n        response.message.args = [ready?'true':'false'];\n        postMessage(response);\n      })\n    }\n  }\n\n  installPackages(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let packages = request.message.args;\n    console.log(\"installPackages:\\n\",packages)//,res)\n    let res = this.micropip.install(packages)\n    this.syncFS()\n    console.log(\"installPackages: DONE!\\n\",res)\n    response.message.contents.push(\"\")//res+\": \"+res)\n    \n    return response;\n  }\n\n  executeCode(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let rawContent = request.message.contents[0];\n    let code;\n    if(rawContent instanceof ArrayBuffer){\n      code = new TextDecoder().decode(rawContent);\n    }else{\n      code = rawContent\n    }\n    console.log(\"executeCode:\\n\",code)//,res)\n    this.execCodeAsync(code)\n\n\n    response.message.contents = [\"true\"]\n    \n    return response;\n  }\n\n  stopExecution(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let wasRunning = this.lastState == CompilerState.Run || this.lastState == CompilerState.Stdin\n    \n    let arg = request.message.args[0] ?? \"2\"\n    let signal = parseInt(arg); // 2 stands for SIGINT.\n    if(isNaN(signal)){signal = 2}\n    console.log(\"stopExecution:\",signal)//,res)\n    setTimeout(()=>{this.interruptBuffer[0] = signal})\n\n    response.message.args = [wasRunning?\"true\":\"false\"]\n    return response\n  }\n\n  executeFile(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let fullpath = request.message.args[0];\n    let path = this.mount +\"/\"+ fullpath\n    console.log(\"executeFile:\",path)//,res)\n    \n    let rawContent = this.fs.readFile(path) as Uint8Array\n    let code = new TextDecoder().decode(rawContent.buffer);\n\n    this.stdinBuffer = []\n    this.execCodeAsync(code)\n\n    response.message.contents = [\"true\"]\n    return response\n  }\n\n  subscribeNotify(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueNotify.set(request.uid, request)\n    } else{\n      this.requestQueueNotify.delete(request.uid)\n    }\n    console.log(\"subscribeNotify:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeState(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueState.set(request.uid, request)\n      setTimeout(()=>{this.sendState(CompilerState.Loading)})\n    } else {\n      this.requestQueueState.delete(request.uid)\n    }\n    console.log(\"subscribeState:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeStdout(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStdout.set(request.uid, request)\n    } else{\n      this.requestQueueStdout.delete(request.uid)\n    }\n    console.log(\"subscribeStdout:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeStderr(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStderr.set(request.uid, request)\n    } else{\n      this.requestQueueStderr.delete(request.uid)\n    }\n    console.log(\"subscribeStderr:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  sendStdin(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let data = request.message.contents[0];\n    console.log(\"PyodideWorker:sendStdin:\\n\",data)\n    this.sendState(CompilerState.Run)\n    if (this.stdinResolver){\n      this.stdinResolver(this.toString(data))\n      this.stdinResolver=undefined\n    }else{\n      this.stdinBuffer.push(this.toString(data))\n    }\n    response.message.args = ['true']\n    \n    return response;\n  }\n\n  createDirectory(request:CompilerRequest):CompilerResponse{\n\n    console.log(\"PYTHON CREATE DIRECTORY\")\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){ \n      return this.responseError(response,\"createDirectory: Requires at least 1 path as argument\");\n    }\n    //TODO: allow for multiple queries;\n    let fullpath = request.message.args[0];\n    if(!this.internal_exists(this.mount + fullpath)){\n      console.log(\"CI ENTRO\")\n      console.log(\"ABC: \", this.mount + \" \" + fullpath) \n      //var str = this.mount + fullpath.replace('.', '')\n      //console.log(str)\n      let res = this.fs.mkdir(this.mount + fullpath);\n      console.log('pydiode:mkdir:',res)\n      this.syncFS()\n    }\n    \n    response.message.args = [fullpath];\n    return response;\n  }\n\n  getPath(node:any){\n    //any: https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.getPath\n    let path = this.fs.getPath(node)\n    let pattern =  new RegExp(\"^\"+this.mount); \n    return path.replace(pattern,\"/\").replace(/\\/\\/+/,\"/\");\n  }\n\n  readDirectory(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){\n      return this.responseError(response,\"readDirectory: Requires at least 1 path as argument and 1 content\");\n    }\n    let fullpath = request.message.args[0];\n    let curDir = this.scanDirectory_recursive(fullpath)\n    response.message.args = [fullpath];\n    response.message.contents = [JSON.stringify(curDir,this.jsonReplacer)]\n    return response;\n  }\n\n\n  scanDirectory(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){\n      return this.responseError(response,\"readDirectory: Requires at least 1 path as argument and 1 content\");\n    }\n    let fullpath = request.message.args[0];\n    console.log(\"scanDirectory: \", fullpath)\n    let curDir = this.scanDirectory_recursive(fullpath, true)\n    response.message.args = [fullpath];\n    response.message.contents = [JSON.stringify(curDir,this.jsonReplacer)]\n    return response;\n  }\n\n  jsonReplacer(key:any,value:any){\n    if (value instanceof ArrayBuffer){\n      let buffer = new Uint8Array(value)\n      return {\n        constructor: value.constructor.name,\n        data: Array.from(buffer),\n        flags: []\n      }\n    }\n    return value\n  }\n\n  renameItem(request:CompilerRequest):CompilerResponse {\n    console.log(\"PYTHON RENAME ITEM\");\n\n    let response = this.responseFromRequest(request);\n\n    console.log(\"RENAME REQUEST: \", request)\n    console.log(\"RENAME RESPONSE: \", response)\n\n    const oldpath = this.mount + request.message.args[0];\n    const newpath = this.mount + request.message.args[1];\n\n    console.log(\"OLDPATH: \", oldpath)\n    console.log(\"NEWPATH: \", newpath)\n\n    console.log(\"OLD FS: \", this.fs)\n    //var res = this.fs.rename(oldpath, newpath);\n    this.fs.rename(oldpath, newpath);\n    this.syncFS();\n    //console.log(\"NEW FS: \", res)\n\n    response.message.args = [oldpath, newpath];\n    return response;\n  }\n\n\n  scanDirectory_recursive(fullpath:string, recursive=false):FsNodeFolder{\n    let res = this.fs.lookupPath(this.mount + fullpath);\n    console.log(\"scanDirectory_recursive: \", res)\n    console.log(\"scanDirectory_recursive:contents: \", res.node.contents);\n    let curDir:FsNodeFolder = {\n      folders: [],\n      files: [],\n      name: res.node.name,\n      path: this.getPath(res.node)\n    };\n\n    for(let name in res.node.contents){\n      let item = res.node.contents[name];\n      let path = this.getPath(item);\n      if (this.fs.isDir(item.mode)){\n        let childDir;\n        if (recursive){\n          childDir = this.scanDirectory_recursive(path, true);\n        }\n        else{\n          childDir = {\n            folders: [],\n            files: [],\n            name: name,\n            path: path\n          }\n        }\n        curDir.folders.push(childDir);\n      }else{\n        let content = this.fs.readFile(this.mount + path)\n        curDir.files.push({\n          name: name,\n          path: path,\n          content: content.buffer\n        })\n      }\n    }\n\n    return curDir;\n  }\n\n  writeFile(request:CompilerRequest):CompilerResponse{\n    \n    let response = this.responseFromRequest(request);\n    let nargs = request.message.args.length;\n    let ncont = request.message.contents.length\n    if ( nargs < 1 || nargs < ncont ){ \n      return this.responseError(response,\"writeFile: Requires at least 1 path as argument and 1 content\");\n    }\n    \n    let fullpath = request.message.args[0];\n    let data = request.message.contents[0];\n    let content;\n    let options = {encoding: \"binary\"}\n    if (data instanceof ArrayBuffer){\n      content = new Uint8Array(data)\n      options.encoding = \"utf8\"\n    }else{\n      content = data\n    }\n\n    console.log(\"writeFile: \", fullpath)\n    console.log(\"writeFile:content: \", content)\n    let res = this.fs.writeFile(this.mount + fullpath, content, options);\n    console.log(\"writeFile:res: \", res)\n    this.syncFS()\n    return response;\n  }\n\n  readFile(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request);\n    if ( request.message.args.length < 1){ \n      return this.responseError(response,\"readFile: Requires at least 1 path as argument\");\n    }\n     \n    let fullpath = request.message.args[0];\n\n    let opts:{} = { encoding: 'utf8' }\n    if (request.message.args.length == 2 && request.message.args[1] == 'binary' ){\n      opts = {encoding: 'binary'} \n    }\n\n    console.log(\"readFile: \", fullpath)\n    let content = this.fs.readFile(this.mount + fullpath, opts);\n    console.log('readFile:content:\\n', content.length)\n    if(content instanceof Uint8Array){\n      console.log('readFile:content: BUFFER',content)\n      response.message.contents = [content.buffer];\n    }\n    else{\n      console.log('readFile:content: STRING')\n      response.message.contents = [content];\n    }\n    return response;\n  }\n\n  delete(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    \n    if (request.message.args.length < 1){\n      response.message.args = [\"false\"]\n      return response;  \n    }\n\n    \n    let fullpath = request.message.args[0];\n    console.log(\"delete: \", fullpath)\n    //TODO: use lookupPath and isDir/isFile\n    // https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.lookupPath\n    //TODO: do it recursive\n    try{this.fs.rmdir(this.mount + fullpath)}catch(_){}\n    try{this.fs.unlink(this.mount + fullpath)}catch(_){}\n    this.syncFS()\n    response.message.args = [\"true\"]\n    return response;\n  }\n\n  exists(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if (request.message.args.length < 1){\n      response.message.args = [\"false\"]\n      return response;  \n    }\n    let fullpath = request.message.args[0];\n    console.log(\"exists: \", this.mount + fullpath)\n    // https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.analyzePath\n    let exists = this.internal_exists(this.mount + fullpath)\n    console.log(\"exists:\", exists)\n    response.message.args = [exists?'true':'false']\n    return response;\n  }\n\n  internal_exists(path:string){\n    console.log(\"internal_file_exists:internal_exists\", path)\n    let res = this.fs.analyzePath(path)\n    console.log(\"internal_file_exists:analyzePath\", res)\n    return res[\"exists\"]\n  }\n}\n  \n\n\n\nmain()\n"],"names":["CompilerMessageType","CompilerState","pyodideRoot","pyodideMount","importScripts","main","_main","apply","arguments","_asyncToGenerator","worker","PyodideWorker","constructor","root","mount","_this","requestQueueNotify","Map","requestQueueState","requestQueueStdout","requestQueueStderr","binEncoder","TextEncoder","binDecoder","TextDecoder","isReady","stdinPending","isSync","needSync","stdinBuffer","Array","lastState","Unknown","interruptBuffer","Uint8Array","readyResolver","readyPromise","Promise","resolve","reject","value","addEventListener","_ref","payload","onData","data","_x","setTimeout","sendState","Loading","initPydiode","then","load","fs","syncfs","pyodide","setInterruptBuffer","Ready","catch","error","Error","_this2","console","log","options","stdin","onStdin","stdout","msg","sendStdout","stderr","sendStderr","loadPyodide","FS","loadPackage","micropip","pyimport","setCustomHooks","_this3","oldInput","globals","input","localThis","set","_ref2","prompt","trim","length","Stdin","stdinResolver","promise","message","line","shift","_x2","_this4","mkdir","filesystems","IDBFS","mounts","toString","ArrayBuffer","decode","toArrayBuffer","encode","responseFromRequest","request","success","errors","response","uid","timestamp","Date","now","type","args","contents","responseError","push","syncFS","err","item","execCodeAsync","code","interruptTimer","setInterval","checkInterrupt","e","Killed","checkIntegrity","errorCallback","messageCallback","loadPackagesFromImports","runPythonAsync","result","Success","handleExecError","finally","clearInterval","sys","errorType","exitCode","last_value","sendNotify","title","kind","forEach","postMessage","state","content","action","ready","SubscribeNotify","subscribeNotify","SubscribeState","subscribeState","SubscribeStdout","subscribeStdout","SubscribeStderr","subscribeStderr","SendStdin","sendStdin","InstallPackages","installPackages","ExecuteCode","executeCode","ExecuteFile","executeFile","StopExecution","stopExecution","CreateDirectory","createDirectory","ReadDirectory","readDirectory","WriteFile","writeFile","ReadFile","readFile","ScanDirectory","scanDirectory","RenameItem","renameItem","Delete","delete","Exists","exists","packages","res","install","rawContent","wasRunning","Run","arg","signal","parseInt","isNaN","fullpath","path","buffer","enable","undefined","internal_exists","getPath","node","pattern","RegExp","replace","curDir","scanDirectory_recursive","JSON","stringify","jsonReplacer","key","name","from","flags","oldpath","newpath","rename","recursive","lookupPath","folders","files","isDir","mode","childDir","nargs","ncont","encoding","opts","rmdir","_","unlink","analyzePath"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3,4,5]}