{"version":3,"file":"src_app_services_python-compiler-service_python-compiler_worker_ts.js","mappings":"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","sources":["./src/app/services/compiler-service/compiler-service.types.ts","./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack/bootstrap","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","./src/app/services/python-compiler-service/python-compiler.worker.ts"],"sourcesContent":["\nexport type UID = string; // should I ? \n\nexport type PromiseResolver<T> = (value: T | PromiseLike<T>) => void;\n\nexport type stdCallback = (data: string) => void;\nexport type stateCallback = (state: CompilerState, content?: string) => void;\nexport type notifyCallback = (title: string, msg: string, kind: string) => void;\n\nexport type CompilerMessageHandler = (message: CompilerRequest) => CompilerResponse;\n\nexport interface CompilerDriver {\n  installPackages(packages: string[]): Promise<string>;\n  executeCode(code: string): Promise<string>;\n  executeFile(fullpath: string): Promise<string>;\n  stopExecution(signal?: number): Promise<boolean>;\n  subscribeNotify(enable?: boolean, onNotify?: (title: string, msg: string, kind: string) => void): Promise<boolean>;\n  subscribeState(enable?: boolean, onState?: (state: CompilerState, content?: string) => void): Promise<boolean>;\n  subscribeStdout(enable?: boolean, onStdout?: (data: string) => void): Promise<boolean>;\n  subscribeStderr(enable?: boolean, onStderr?: (data: string) => void): Promise<boolean>;\n  sendStdin(msg: string): Promise<boolean>;\n}\n\nexport enum CompilerState {\n  Unknown = 'Unknown',\n  Init = 'Init',\n  Loading = 'Loading',\n  Ready = 'Ready',\n  Run = 'Run',\n  Stdin = 'Stdin',\n  Success = 'Success',\n  Killed = 'Killed',\n  Error = 'Error',\n}\n\n\n\n\nexport enum CompilerMessageType {\n  Ready = 'Ready',\n  Mount = 'Mount',\n  Unmount = 'Unmount',\n  InstallPackages = 'InstallPackages',\n  ExecuteFile = 'ExecuteFile',\n  ExecuteCode = 'ExecuteCode',\n  StopExecution = 'StopExecution',\n  SubscribeNotify = 'SubscribeNotify',\n  SubscribeState = 'SubscribeState',\n  SubscribeStdout = 'SubscribeStdout',\n  SubscribeStderr = 'SubscribeStderr',\n  SendStdin = 'SendStdin',\n  CreateDirectory = 'CreateDirectory',\n  WriteFile = 'WriteFile',\n  ReadFile = 'ReadFile',\n  ReadDirectory = 'ReadDirectory',\n  ScanDirectory = 'ScanDirectory',\n  Delete = 'Delete',\n  Exists = 'Exists',\n  RenameItem = \"RenameItem\"\n}\n\n\nexport interface CompilerMessage {\n  uid: UID;\n  type: CompilerMessageType;\n  args: string[];\n  contents: Array<string | ArrayBuffer>;\n}\n\nexport interface CompilerRequest {\n  uid: UID;\n  timestamp: number;\n  message: CompilerMessage;\n}\n\nexport interface CompilerResponse {\n  uid: UID;\n  timestamp: number;\n  success: boolean;\n  message: CompilerMessage;\n  errors: string[];\n}\n\nexport interface CompilerRequestHandler {\n  uid: UID;\n  request: CompilerRequest;\n  resolvePromise: PromiseResolver<any>\n}\n\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/// <reference lib=\"webworker\" />\n// Configs\n\nimport { CompilerMessageHandler, CompilerMessageType, CompilerRequest, CompilerResponse, CompilerState, PromiseResolver } from \"../compiler-service/compiler-service.types\";\n\nimport { FsNodeFolder } from \"../fs-service/fs.service.types\";\n\n// Bootstrap pyodide\n\nimportScripts(\"assets/pyodide/pyodide.js\");\ndeclare var loadPyodide: any;\n\n//let worker: PyodideFsWorker;\nasync function main() {\n  let worker = new PyodideWorker();\n}\n\nclass PyodideWorker{\n  \n  requestQueueNotify = new Map<string,CompilerRequest>();\n  requestQueueState = new Map<string,CompilerRequest>();\n  requestQueueStdout = new Map<string,CompilerRequest>();\n  requestQueueStderr = new Map<string,CompilerRequest>();\n\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  pyodide: any;\n  fs: any;\n  loadPyodide: any;\n  micropip: any;\n  mountPoint?:string;\n  isReady = false;\n  readyPromise: Promise<boolean>;\n  readyResolver: PromiseResolver<boolean>;\n  stdinPending=false;\n  stdinResolver?: PromiseResolver<string>;\n  isSync = false;\n  needSync = false;\n  stdinBuffer = new Array<string>();\n  lastState = CompilerState.Unknown\n  lastResult?:any\n  interruptBuffer = new Uint8Array(1);\n  interruptTimer:any\n  \n  constructor(){\n    addEventListener(\"message\", async ( payload:any ) => { this.onData(payload.data) })\n\n    this.requestQueueStdout = new Map();\n    this.requestQueueStderr = new Map();\n\n    //onReady\n    let readyResolver: PromiseResolver<boolean>;\n    this.readyPromise =  new Promise<boolean>((resolve, reject) => {\n      readyResolver = resolve;\n    })\n    this.readyResolver = (value)=>{ readyResolver(value) }\n\n    //Send Init event, but outside the constructor\n    setTimeout(()=>{this.sendState(CompilerState.Loading)})\n\n    this.init().then(()=>{\n      //this.load(this.mountPoint);\n      this.interruptBuffer[0]=0\n      this.pyodide.setInterruptBuffer(this.interruptBuffer)\n      this.sendState(CompilerState.Init)\n      // Send Init state to the driver\n      \n      console.log(\"PyodideWorker:ready\")\n    }).catch( (error:any)=>{\n      this.sendState(CompilerState.Error, error)\n    });\n  }\n\n  async init(){\n    \n    console.log(\"PyodideFsWorker:init:\")\n    \n    let options = {\n      stdin: ()=>{return this.onStdin()},\n      stdout: (msg:string)=>{this.sendStdout(msg)},\n      stderr: (msg:string)=>{this.sendStderr(msg)},\n    }\n\n    console.log(\"PyodideFsWorker:init:load:\")\n    \n    this.pyodide = await loadPyodide(options);\n    this.fs = this.pyodide.FS;\n    await this.pyodide.loadPackage([\"micropip\"]);\n    this.micropip = this.pyodide.pyimport(\"micropip\");\n    \n    console.log(\"PyodideFsWorker:init:load:done\")\n\n    this.setCustomHooks()\n  }\n\n  async setCustomHooks(){\n    let oldInput = this.pyodide.globals.input;\n    console.log(\"PyodideFsWorker:setCustomHooks:oldInput:\",oldInput)\n\n\n    //Globals: Input\n    let localThis = this;\n    this.pyodide.globals.set('input', async function (prompt?:string) {\n      if (prompt && prompt.trim().length>0){localThis.sendStdout(prompt)}\n\n      localThis.sendState(CompilerState.Stdin)\n      console.log(\"PyodideFsWorker:setCustomHooks:scrivo sulla consolle!!!!\")\n      let stdinResolver: PromiseResolver<string>;      \n      let promise =  new Promise<string>((resolve, reject) => {\n        stdinResolver = resolve;\n      })\n      localThis.stdinResolver = (message)=>{ stdinResolver(message) }\n\n      if(localThis.stdinBuffer.length>0){\n        let line = localThis.stdinBuffer.shift()\n        localThis.stdinResolver(line!)\n      }\n\n      return promise;\n    });\n\n    /*\n    let signal = this.pyodide.pyimport(\"signal\");\n    signal.signal(signal.SIGINT, (signal:any, frame:any)=>{  \n      console.log('setCustomHooks:signal:signal:', signal);\n      console.log('setCustomHooks:signal:frame:', frame);\n    })\n    */\n\n\n\n\n  }\n  /*\n  async load(mountPoint:string)\n  {\n    this.mountPoint = mountPoint;\n    console.log(\"PyodideFsWorker: load\")\n    this.fs.mkdir(this.mountPoint);\n    this.fs.mount(this.fs.filesystems.IDBFS, { root: '/' }, this.mountPoint);\n    console.log(\"PyodideFsWorker: load: done\")\n\n    console.log(\"PyodideFsWorker: load: fs\",this.fs)\n    console.log(\"PyodideFsWorker: load: mounts\",this.fs.mounts)\n    console.log(\"PyodideFsWorker: load: root\",this.fs.root)\n    console.log(\"PyodideFsWorker: load: root mount\",this.fs.root.mount)\n  }\n  */\n\n  toString(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return this.binDecoder.decode(data) }\n    return data\n  }\n\n  toArrayBuffer(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return data }\n    return this.binEncoder.encode(data)\n  }\n  \n  \n  responseFromRequest(request:CompilerRequest, success:boolean=true, errors:string[]=[]):CompilerResponse{\n    let response:CompilerResponse = {\n      uid: request.uid,\n      timestamp: Date.now(),\n      success: success,\n      errors: errors,\n      message: {\n        uid: request.message.uid,\n        type: request.message.type,\n        args:[],\n        contents:[]\n      }\n    };\n    return response\n  }\n\n  responseError(response:CompilerResponse, error?:string):CompilerResponse{\n    response.success = false;\n    if (error){response.errors.push(error)};\n    return response;\n  }\n\n  syncFS(){\n    if (!this.isSync){\n      this.isSync = true\n      this.needSync = false;\n      console.log('syncFS: do!');\n      this.fs.syncfs((err?:any)=>{\n        if(err){\n          console.log('syncFS: error while syncing, retrying')\n          this.needSync = true;\n        }else{\n          console.log('syncFS: success!');\n        }\n        this.isSync = false;\n        if (this.needSync){\n          this.needSync = false;\n          console.log('syncFS: repeat!');\n          this.syncFS()\n        }\n      })\n    }\n    else{\n      console.log('syncFS: queued');\n      this.needSync = true;\n    }\n  }\n\n  onStdin(){\n    //TOD: unused??\n    // localThis.sendState(CompilerState.Stdin)\n    console.log('PyodideWorker:onStdin:');   \n    //if (this.stdinBuffer.length > 0){}    -> What does this do?\n    //let item = this.stdinBuffer.shift()\n    let item = this.stdinBuffer[0];\n    console.log('PyodideWorker:onStdin:', item);\n    return item\n  }\n\n  execCodeAsync(code:string){\n    console.log(\"PyodideFsWorker:execCode:\",code)\n    this.interruptBuffer[0]=0\n    this.pyodide.setInterruptBuffer(this.interruptBuffer)\n    this.interruptTimer = setInterval(()=>{\n      try{ this.pyodide.checkInterrupt() }\n      catch( e ){ \n        this.sendStderr(\"Process terminated by user request.\")\n        this.sendState(CompilerState.Killed)\n        throw e;\n      }\n    },10)\n\n\n    /*\n    async pyodide.loadPackagesFromImports(code, options)\n        code (string) – The code to inspect.\n\n        options.checkIntegrity (boolean) – If true, check the integrity of the downloaded packages (default: true)\n\n        options.errorCallback ((message: string) => void) – A callback, called with error/warning messages (optional)\n\n        options.messageCallback ((message: string) => void) – A callback, called with progress messages (optional)\n    */\n    let options = {\n      checkIntegrity: true, //default: true\n      errorCallback: (msg:string)=>{this.sendStderr(msg)},\n      messageCallback: (msg:string)=>{this.sendStdout(msg)},\n    }\n    this.stdinBuffer = []\n    this.pyodide.loadPackagesFromImports(code,options)\n\n    this.pyodide.runPythonAsync(code).then( (result:any)=>{\n      console.log(\"PyodideFsWorker:execCode:result:\\n\",result)\n      this.sendState(CompilerState.Success, result)\n    }).catch( (error:any)=>{\n      this.handleExecError(error)\n    }).finally(()=>{\n      clearInterval(this.interruptTimer)\n    })\n  }\n\n  \n  handleExecError(error:any){\n    let sys = this.pyodide.pyimport(\"sys\");\n    let errorType = error.type;\n    if (errorType == \"SystemExit\"){\n      let exitCode = sys.last_value.code.toString();\n      if(exitCode == \"0\"){\n        this.sendState(CompilerState.Success)\n      }else{\n        this.sendState(CompilerState.Error, \"Execution terminated with exit code: \" + exitCode)\n      }\n      return;\n    }\n    this.sendState(CompilerState.Error, error.message)\n    //throw error\n    /*\n    let props = Object.getOwnPropertyNames(sys.last_value)\n    let propArgs = Object.getOwnPropertyNames(sys.last_value.args)\n    let propTB = Object.getOwnPropertyNames(sys.last_value.__traceback__)\n\n    let exceptionType = sys.last_type.toJs();\n    let errorValue = sys.last_value.toJs();\n    let errorTraceback = sys.last_traceback.toJs();\n    console.log(\"execCode: error.type:\", errorType)\n    console.log(\"execCode: error.type:\", errorType)\n    console.log(\"execCode: sys.last_type:\", exceptionType)\n    console.log(\"execCode: sys.last_value:\", errorValue)\n    console.log(\"execCode: sys.last_traceback:\", errorTraceback)\n\n    console.log(\"execCode: error.message:\", error.message )\n    */\n    //console.log(\"execCode: sys:\\n\", sys)\n    \n    //throw error;\n  }\n\n  sendNotify(title: string, msg:string, kind:string=\"\"){\n    console.log(\"PyodideFsWorker:sendNotify: \",msg)\n    this.requestQueueNotify.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [title, msg, kind]\n      console.log(\"PyodideFsWorker:sendNotify:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  sendState(state?: CompilerState, content?:any){\n    if(!state){ state = this.lastState } //Resend the same state, used onSubscribe\n    else { this.lastState = state }\n    \n    console.log(\"PyodideWorker:sendState: \",state)\n    this.requestQueueState.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [state ?? CompilerState.Unknown]\n      if(content){\n        response.message.contents.push(content)\n      }\n      console.log(\"PyodideFsWorker:sendState:uid:\\n\",response)\n      postMessage(response)\n    })\n  }\n\n  sendStdout(msg:string){\n    console.log(\"PyodideFsWorker:sendStdout: \"+msg)\n    this.requestQueueStdout.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [msg]\n      console.log(\"PyodideFsWorker:sendStdout:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  sendStderr(msg:string){\n    console.log(\"PyodideFsWorker:sendStderr: \"+msg)\n    this.requestQueueStderr.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [msg]\n      console.log(\"PyodideFsWorker:sendStderr:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  onData(request:CompilerRequest) {\n    //console.log('PyodideFsWorker:onData:',request);\n    let action: CompilerMessageHandler | null = null;\n\n    switch (request.message.type) {\n      case CompilerMessageType.Ready:\n        this.ready(request);\n        break;\n      case CompilerMessageType.SubscribeNotify:\n        action=(request)=>{return this.subscribeNotify(request)};\n        break;\n      case CompilerMessageType.SubscribeState:\n        action=(request)=>{return this.subscribeState(request)};\n        break;\n      case CompilerMessageType.SubscribeStdout:\n        action=(request)=>{return this.subscribeStdout(request)};\n        break;\n      case CompilerMessageType.SubscribeStderr:\n        action=(request)=>{return this.subscribeStderr(request)};\n        break;\n      case CompilerMessageType.SendStdin:\n        action=(request)=>{return this.sendStdin(request)};\n        break;\n      case CompilerMessageType.InstallPackages:\n        action=(request)=>{return this.installPackages(request)};\n        break;\n      case CompilerMessageType.ExecuteCode:\n        action=(request)=>{return this.executeCode(request)};\n        break;\n      case CompilerMessageType.ExecuteFile:\n        action=(request)=>{return this.executeFile(request)};\n        break;\n      case CompilerMessageType.StopExecution:\n        action=(request)=>{return this.stopExecution(request)};\n        break;\n      case CompilerMessageType.Mount:\n        action=(request)=>{return this.mount(request)};\n        break;\n      case CompilerMessageType.Unmount:\n        action=(request)=>{return this.unmount(request)};\n        break;\n      case CompilerMessageType.CreateDirectory:\n        action=(request)=>{return this.createDirectory(request)};\n        break;\n      case CompilerMessageType.ReadDirectory:\n        action=(request)=>{return this.readDirectory(request)};\n        break;\n      case CompilerMessageType.WriteFile:\n        action=(request)=>{return this.writeFile(request)};\n        break;\n      case CompilerMessageType.ReadFile:\n        action=(request)=>{return this.readFile(request)};\n        break;\n      case CompilerMessageType.ScanDirectory:\n        action=(request)=>{return this.scanDirectory(request)};\n        break;\n      case CompilerMessageType.RenameItem:\n        action=(request)=>{return this.renameItem(request)};\n        break;\n      case CompilerMessageType.Delete:\n        action=(request)=>{return this.delete(request)};\n        break;\n      case CompilerMessageType.Exists:\n        action=(request)=>{return this.exists(request)};\n        break;\n      default: break;\n    }\n    if(action){ \n      let response = action(request);\n      if (response){ postMessage(response) }\n    }\n  }\n\n  ready(request:CompilerRequest){\n    let response = this.responseFromRequest(request);\n    response.message.args = ['true'];\n    if (this.isReady) {\n      postMessage(response);\n    }else{\n      this.readyPromise.then((ready)=>{\n        response.message.args = [ready?'true':'false'];\n        postMessage(response);\n      })\n    }\n  }\n\n  installPackages(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let packages = request.message.args;\n    console.log(\"PyodideFsWorker:installPackages:\\n\",packages)//,res)\n    let res = this.micropip.install(packages)\n    this.syncFS()\n    console.log(\"PyodideFsWorker:installPackages: DONE!\\n\",res)\n    response.message.contents.push(\"\")//res+\": \"+res)\n    \n    return response;\n  }\n\n  executeCode(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let rawContent = request.message.contents[0];\n    let code;\n    if(rawContent instanceof ArrayBuffer){\n      code = new TextDecoder().decode(rawContent);\n    }else{\n      code = rawContent\n    }\n    console.log(\"PyodideFsWorker:executeCode:\\n\",code)//,res)\n    this.execCodeAsync(code)\n\n    response.message.contents = [\"true\"]\n    \n    return response;\n  }\n\n  stopExecution(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let wasRunning = this.lastState == CompilerState.Run || this.lastState == CompilerState.Stdin\n    \n    let arg = request.message.args[0] ?? \"2\"\n    let signal = parseInt(arg); // 2 stands for SIGINT.\n    if(isNaN(signal)){signal = 2}\n    console.log(\"stopExecution:\",signal)//,res)\n    setTimeout(()=>{this.interruptBuffer[0] = signal})\n\n    response.message.args = [wasRunning?\"true\":\"false\"]\n    return response\n  }\n\n  executeFile(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let fullpath = request.message.args[0];\n    let path = this.mountPoint +\"/\"+ fullpath\n    console.log(\"executeFile:\",path)//,res)\n    \n    let rawContent = this.fs.readFile(path) as Uint8Array\n    let code = new TextDecoder().decode(rawContent.buffer);\n\n    this.stdinBuffer = []\n    this.execCodeAsync(code)\n\n    response.message.contents = [\"true\"]\n    return response\n  }\n\n  subscribeNotify(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueNotify.set(request.uid, request)\n    } else{\n      this.requestQueueNotify.delete(request.uid)\n    }\n    console.log(\"subscribeNotify:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeState(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueState.set(request.uid, request)\n      setTimeout(()=>{this.sendState(CompilerState.Loading)})\n    } else {\n      this.requestQueueState.delete(request.uid)\n    }\n    console.log(\"subscribeState:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeStdout(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStdout.set(request.uid, request)\n    } else{\n      this.requestQueueStdout.delete(request.uid)\n    }\n    console.log(\"subscribeStdout:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeStderr(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStderr.set(request.uid, request)\n    } else{\n      this.requestQueueStderr.delete(request.uid)\n    }\n    console.log(\"subscribeStderr:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  sendStdin(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let data = request.message.contents[0];\n    console.log(\"PyodideWorker:sendStdin:\\n\",data)\n    this.sendState(CompilerState.Run)\n    if (this.stdinResolver){\n      this.stdinResolver(this.toString(data))\n      this.stdinResolver=undefined\n    }else{\n      this.stdinBuffer.push(this.toString(data))\n    }\n    response.message.args = ['true']\n    \n    return response;\n  }\n\n  mount(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){ \n      return this.responseError(response,\"createDirectory: Requires at least 1 path as argument\");\n    }\n    let mountPoint = request.message.args[0];\n    \n    this.mountPoint = mountPoint;\n    console.log(\"PyodideFsWorker:mount:\",mountPoint)\n    \n    this.sendState(CompilerState.Loading)\n    console.log(\"PyodideFsWorker:mount:loading\")\n\n    if(!this.internal_exists(this.mountPoint))\n      this.fs.mkdir(this.mountPoint)\n    \n    \n    this.fs.mount(this.fs.filesystems.IDBFS, { root: '/' }, this.mountPoint);\n    this.fs.syncfs(true,()=>{\n      if(!this.isReady){\n        console.log(\"PyodideFsWorker:mount:ready\")\n        this.sendState(CompilerState.Ready)\n        console.log(\"PyodideFsWorker:mount:ready:done\")\n      }\n        ////Send it just after the execution of this.initPydiode(), not the first mount\n      this.isReady = true;\n      this.readyResolver(this.isReady);\n    });\n    \n    console.log(\"PyodideFsWorker:mount:done\")\n    \n    response.message.args = [mountPoint];\n    return response;\n  }\n\n  unmount(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){ \n      return this.responseError(response,\"createDirectory: Requires at least 1 path as argument\");\n    }\n    let mountPoint = request.message.args[0];\n    \n    console.log(\"PyodideFsWorker:unmount:\",mountPoint)\n\n    this.sendState(CompilerState.Loading)\n\n    this.fs.unmount(mountPoint);\n    this.mountPoint = \"\"\n    this.isReady=false\n    this.fs.syncfs(true,()=>{\n      this.isReady = false;\n      this.sendState(CompilerState.Ready)\n      this.readyResolver(this.isReady);\n    });\n    \n    console.log(\"PyodideFsWorker:unmount:done\")\n    \n    response.message.args = [mountPoint];\n    return response;\n  }\n\n  createDirectory(request:CompilerRequest):CompilerResponse{\n    console.log(\"PyodideFsWorker:createDirectory:\")\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){ \n      return this.responseError(response,\"createDirectory: Requires at least 1 path as argument\");\n    }\n    //TODO: allow for multiple queries;\n    let fullpath = request.message.args[0];\n    if(!this.internal_exists(this.mountPoint + fullpath)){\n      console.log(\"CI ENTRO\")\n      console.log(\"ABC: \", this.mountPoint + \" \" + fullpath) \n      //var str = this.mount + fullpath.replace('.', '')\n      //console.log(str)\n      let res = this.fs.mkdir(this.mountPoint + fullpath);\n      console.log('pydiode:createDirectory:',res)\n      this.syncFS()\n    }\n    \n    response.message.args = [fullpath];\n    return response;\n  }\n\n  getPath(node:any){\n    //any: https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.getPath\n    let path = this.fs.getPath(node)\n    let pattern =  new RegExp(\"^\"+this.mountPoint); \n    return path.replace(pattern,\"/\").replace(/\\/\\/+/,\"/\");\n  }\n\n  readDirectory(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){\n      return this.responseError(response,\"readDirectory: Requires at least 1 path as argument and 1 content\");\n    }\n    let fullpath = request.message.args[0];\n    let curDir = this.scanDirectory_recursive(fullpath)\n    response.message.args = [fullpath];\n    response.message.contents = [JSON.stringify(curDir,this.jsonReplacer)]\n    return response;\n  }\n\n  scanDirectory(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){\n      return this.responseError(response,\"readDirectory: Requires at least 1 path as argument and 1 content\");\n    }\n    let fullpath = request.message.args[0];\n    console.log(\"PyodideFsWorker:scanDirectory:\", fullpath)\n    let curDir = this.scanDirectory_recursive(fullpath, true)\n    response.message.args = [fullpath];\n    response.message.contents = [JSON.stringify(curDir,this.jsonReplacer)]\n    return response;\n  }\n\n  jsonReplacer(key:any,value:any){\n    if (value instanceof ArrayBuffer){\n      let buffer = new Uint8Array(value)\n      return {\n        constructor: value.constructor.name,\n        data: Array.from(buffer),\n        flags: []\n      }\n    }\n    return value\n  }\n\n  renameItem(request:CompilerRequest):CompilerResponse {\n    console.log(\"PyodideFsWorker:renameItem:\");\n\n    let response = this.responseFromRequest(request);\n\n    const oldpath = this.mountPoint + request.message.args[0];\n    const newpath = this.mountPoint + request.message.args[1];\n\n    //var res = this.fs.rename(oldpath, newpath);\n    this.fs.rename(oldpath, newpath);\n    this.syncFS();\n    //console.log(\"NEW FS: \", res)\n\n    response.message.args = [oldpath, newpath];\n    return response;\n  }\n\n\n  scanDirectory_recursive(fullpath:string, recursive=false):FsNodeFolder{\n    let res = this.fs.lookupPath(this.mountPoint + fullpath);\n    console.log(\"PyodideFsWorker:scanDirectory_recursive: \", res)\n    console.log(\"PyodideFsWorker:scanDirectory_recursive:contents: \", res.node.contents);\n    let curDir:FsNodeFolder = {\n      folders: [],\n      files: [],\n      name: res.node.name,\n      path: this.getPath(res.node)\n    };\n\n    for(let name in res.node.contents){\n      let item = res.node.contents[name];\n      let path = this.getPath(item);\n      if (this.fs.isDir(item.mode)){\n        let childDir;\n        if (recursive){\n          childDir = this.scanDirectory_recursive(path, true);\n        }\n        else{\n          childDir = {\n            folders: [],\n            files: [],\n            name: name,\n            path: path\n          }\n        }\n        curDir.folders.push(childDir);\n      }else{\n        let content = this.fs.readFile(this.mountPoint + path)\n        curDir.files.push({\n          name: name,\n          path: path,\n          content: content.buffer\n        })\n      }\n    }\n\n    return curDir;\n  }\n\n  writeFile(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request);\n    let nargs = request.message.args.length;\n    let ncont = request.message.contents.length\n    if ( nargs < 1 || nargs < ncont ){ \n      return this.responseError(response,\"writeFile: Requires at least 1 path as argument and 1 content\");\n    }\n    \n    let fullpath = request.message.args[0];\n    let data = request.message.contents[0];\n    let content;\n    let options = {encoding: \"binary\"}\n    if (data instanceof ArrayBuffer){\n      content = new Uint8Array(data)\n      options.encoding = \"utf8\"\n    }else{\n      content = data\n    }\n\n    console.log(\"PyodideFsWorker:writeFile: \", fullpath)\n    //console.log(\"PyodideFsWorker:writeFile:content: \", content)\n    let res = this.fs.writeFile(this.mountPoint + fullpath, content, options);\n    console.log(\"PyodideFsWorker:writeFile:res: \", res)\n    this.syncFS()\n    return response;\n  }\n\n  readFile(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request);\n    if ( request.message.args.length < 1){ \n      return this.responseError(response,\"readFile: Requires at least 1 path as argument\");\n    }\n     \n    let fullpath = request.message.args[0];\n\n    let opts:{} = { encoding: 'utf8' }\n    if (request.message.args.length == 2 && request.message.args[1] == 'binary' ){\n      opts = {encoding: 'binary'} \n    }\n\n    console.log(\"PyodideFsWorker:readFile: \", fullpath)\n    let content = this.fs.readFile(this.mountPoint + fullpath, opts);\n    console.log('PyodideFsWorker:readFile:content:\\n', content.length)\n    if(content instanceof Uint8Array){\n      console.log('PyodideFsWorker:readFile:content: BUFFER',content)\n      response.message.contents = [content.buffer];\n    }\n    else{\n      console.log('PyodideFsWorker:readFile:content: STRING')\n      response.message.contents = [content];\n    }\n    return response;\n  }\n\n  delete(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    \n    if (request.message.args.length < 1){\n      response.message.args = [\"false\"]\n      return response;  \n    }\n\n    \n    let fullpath = request.message.args[0];\n    console.log(\"PyodideFsWorker:delete: \", fullpath)\n    //TODO: use lookupPath and isDir/isFile\n    // https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.lookupPath\n    //TODO: do it recursive\n    try{this.fs.rmdir(this.mountPoint + fullpath)}catch(_){}\n    try{this.fs.unlink(this.mountPoint + fullpath)}catch(_){}\n    this.syncFS()\n    response.message.args = [\"true\"]\n    return response;\n  }\n\n  exists(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if (request.message.args.length < 1){\n      response.message.args = [\"false\"]\n      return response;  \n    }\n    let fullpath = request.message.args[0];\n    console.log(\"PyodideFsWorker:exists:\", this.mountPoint + fullpath)\n    // https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.analyzePath\n    let exists = this.internal_exists(this.mountPoint + fullpath)\n    console.log(\"PyodideFsWorker:exists:\", exists)\n    response.message.args = [exists?'true':'false']\n    return response;\n  }\n\n  internal_exists(path:string){\n    console.log(\"PyodideFsWorker:internal_file_exists:internal_exists\", path)\n    let res = this.fs.analyzePath(path)\n    console.log(\"PyodideFsWorker:internal_file_exists:analyzePath\", res)\n    return res[\"exists\"]\n  }\n}\n\nmain()\n"],"names":["CompilerMessageType","CompilerState","importScripts","main","_main","apply","arguments","_asyncToGenerator","worker","PyodideWorker","constructor","_this","requestQueueNotify","Map","requestQueueState","requestQueueStdout","requestQueueStderr","binEncoder","TextEncoder","binDecoder","TextDecoder","isReady","stdinPending","isSync","needSync","stdinBuffer","Array","lastState","Unknown","interruptBuffer","Uint8Array","addEventListener","_ref","payload","onData","data","_x","readyResolver","readyPromise","Promise","resolve","reject","value","setTimeout","sendState","Loading","init","then","pyodide","setInterruptBuffer","Init","console","log","catch","error","Error","_this2","options","stdin","onStdin","stdout","msg","sendStdout","stderr","sendStderr","loadPyodide","fs","FS","loadPackage","micropip","pyimport","setCustomHooks","_this3","oldInput","globals","input","localThis","set","_ref2","prompt","trim","length","Stdin","stdinResolver","promise","message","line","shift","_x2","toString","ArrayBuffer","decode","toArrayBuffer","encode","responseFromRequest","request","success","errors","response","uid","timestamp","Date","now","type","args","contents","responseError","push","syncFS","syncfs","err","item","execCodeAsync","code","interruptTimer","setInterval","checkInterrupt","e","Killed","checkIntegrity","errorCallback","messageCallback","loadPackagesFromImports","runPythonAsync","result","Success","handleExecError","finally","clearInterval","sys","errorType","exitCode","last_value","sendNotify","title","kind","forEach","postMessage","state","content","action","Ready","ready","SubscribeNotify","subscribeNotify","SubscribeState","subscribeState","SubscribeStdout","subscribeStdout","SubscribeStderr","subscribeStderr","SendStdin","sendStdin","InstallPackages","installPackages","ExecuteCode","executeCode","ExecuteFile","executeFile","StopExecution","stopExecution","Mount","mount","Unmount","unmount","CreateDirectory","createDirectory","ReadDirectory","readDirectory","WriteFile","writeFile","ReadFile","readFile","ScanDirectory","scanDirectory","RenameItem","renameItem","Delete","delete","Exists","exists","packages","res","install","rawContent","wasRunning","Run","arg","signal","parseInt","isNaN","fullpath","path","mountPoint","buffer","enable","undefined","internal_exists","mkdir","filesystems","IDBFS","root","getPath","node","pattern","RegExp","replace","curDir","scanDirectory_recursive","JSON","stringify","jsonReplacer","key","name","from","flags","oldpath","newpath","rename","recursive","lookupPath","folders","files","isDir","mode","childDir","nargs","ncont","encoding","opts","rmdir","_","unlink","analyzePath"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3,4,5]}